# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  rules:
    # Code style & formatting
    prefer_single_quotes: true
    always_use_package_imports: true
    avoid_print: true
    avoid_unnecessary_containers: true
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true

    # Null safety & type checking
    avoid_returning_null_for_future: true
    avoid_field_initializers_in_const_classes: true
    annotate_overrides: true
    type_annotate_public_apis: true

    # Error prevention
    no_logic_in_create_state: true
    avoid_init_to_null: true
    use_key_in_widget_constructors: true

    # Naming & structure
    camel_case_types: true
    constant_identifier_names: false
    non_constant_identifier_names: false

    # Readability & maintainability
    always_declare_return_types: true
    sort_child_properties_last: true
    avoid_classes_with_only_static_members: false

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
